@mixin bp($point) {

	@if $point == "print" {
		@media only print { @content; }
	}

	@if $point == "tiny" {
		@media only screen and (min-width: 38em) { @content; }
	}

	@if $point == "small" {
		@media only screen and (min-width: 40em) { @content; }
	}

	@if $point == "medium" {
		@media only screen and (min-width: 45em) { @content; }
	}

	@if $point == "max_medium" {
		@media only screen and (max-width: 45em) { @content; }
	}

	@if $point == "large" {
		@media only screen and (min-width: 70em) { @content; }
	}

	@if $point == "huge" {
		@media only screen and (min-width: 90em) { @content; }
	}

}

@mixin em_width($px, $default: $fontsize) { width: #{$px / $default}em; }
@mixin em_height($px, $default: $fontsize) { height: #{$px / $default}em; }
@mixin em_maxwidth($px, $default: $fontsize) { max-width: #{$px / $default}em; }
@mixin em_minwidth($px, $default: $fontsize) { min-width: #{$px / $default}em; }
@mixin em_maxheight($px, $default: $fontsize) { max-height: #{$px / $default}em; }
@mixin em_minheight($px, $default: $fontsize) { min-height: #{$px / $default}em; }
@mixin em_margin($top: 0, $right: $top, $bot: $top, $left: $right, $default: $fontsize) { margin: #{$top / $default}em #{$right / $default}em #{$bot / $default}em #{$left / $default}em; }
@mixin em_margintop($top: 0, $default: $fontsize) { margin-top: #{$top / $default}em; }
@mixin em_marginright($right: 0, $default: $fontsize) { margin-right: #{$right / $default}em; }
@mixin em_marginbottom($bot: 0, $default: $fontsize) { margin-bottom: #{$bot / $default}em; }
@mixin em_marginleft($left: 0, $default: $fontsize) { margin-left: #{$left / $default}em; }
@mixin em_padding($top: 0, $right: $top, $bot: $top, $left: $right, $default: $fontsize) { padding: #{$top / $default}em #{$right / $default}em #{$bot / $default}em #{$left / $default}em; }
@mixin em_paddingtop($top: 0, $default: $fontsize) { padding-top: #{$top / $default}em }
@mixin em_paddingright($right: 0, $default: $fontsize) { padding-right: #{$right / $default}em; }
@mixin em_paddingbottom($bot: 0, $default: $fontsize) { padding-bottom: #{$bot / $default}em; }
@mixin em_paddingleft($left: 0, $default: $fontsize) { padding-left: #{$left / $default}em; }
@mixin em_fontsize($px) { font-size: #{$px / $fontsize}em; }
@mixin em_lineheight($px, $default: $fontsize) { line-height: #{$px / $default}em; }

@mixin box_shadow($hoffset: 0, $voffset: 0, $blur: 0, $spread: 0, $color: $black, $inset: false) {

	@if $inset == false {
		-webkit-box-shadow: $hoffset $voffset $blur $spread $color;
		box-shadow: $hoffset $voffset $blur $spread $color;
	} @else {
		-webkit-box-shadow: inset $hoffset $voffset $blur $spread $color;
		box-shadow: inset $hoffset $voffset $blur $spread $color;
	}

}

@mixin opacity($i) {
	$forie: $i * 100;

	-ms-filter:"progid:DXImageTransform.Microsoft.Alpha(Opacity="+$forie+")";
	filter: alpha(opacity=$forie);
	opacity: $i;
}

@mixin transition($sel: all,$time: 1s,$ease: linear) {
	-webkit-transition: $sel $time $time;
	-moz-transition: $sel $time $time;
	-o-transition: $sel $time $time;
	-ms-transition: $sel $time $time;
	transition: $sel $time $time;
}
